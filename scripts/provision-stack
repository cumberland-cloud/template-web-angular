#!/bin/bash

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
SCRIPT_NAME="provision-stack"
SCRIPT_DES=$''
PROJECT_DIR="$SCRIPT_DIR/.."

if [ -f "$PROJECT_DIR/.env" ]
then
  source "$PROJECT_DIR/.env"
fi

function log(){
    echo -e "\e[92m$(date +"%r")\e[0m: \e[4;32m$SCRIPT_NAME\e[0m : >> $1"
}

function help(){
    echo -e "\n\e[4m$SCRIPT_NAME\e[0m\n\n\t$SCRIPT_DES" 
}

while [[ $# -gt 0 ]]; do
  key="$1"
  case $key in
    --help|-help|--h|-h)
      help
      exit 0
      ;;
    --action|-action|--a|-a)
      ACTION=$2
      shift
      shift
      ;;
    --application|-application|--app|-app|--ap|-ap)
      APPLICATION=$2
      shift
      shift
      ;;
    *)
      log "Input not understood. See \e[3m--help\e[0m for information on using this command."
      exit 1
      ;;
  esac
done


if [[ -z "$ACTION" || -z "$APPLICATION" ]]
then
  echo -e "---------- \e[2mCUMBERLAND CLOUD APPLICATION\e[0m ---------- \n" 
  echo -e "Provision the necessary AWS infrastructure for a cloud native "
  echo -e "web application through CloudFormation stack templates. \n"
fi

while  [[ -z "$ACTION" ]] || [[ "$ACTION" != "create" && "$ACTION" != "update" && "$ACTION" != "delete" ]]
do
  echo -e '\e[4mStack Actions:\e[0m \e[3mcreate\e[0m, \e[3mupdate\e[0m, \e[3mdelete\e[0m \n'
  read -p "Enter stack action: " ACTION

  if [[ -z "$ACTION" ]] || [[ "$ACTION" != "create" && "$ACTION" != "update" && "$ACTION" != "delete" ]]
  then
    log "Input not understood"
  fi
done

while [[ -z "$APPLICATION" ]]
do
  read -p "Enter application name:  " APPLICATION
done


if [[ "$ACTION" == "create" || "$ACTION" == "update" ]]
then
  while [[ -z "$DOMAIN" ]]
  do
    read -p "Enter domain name (without www.): " DOMAIN
  done
  while [[ -z "$HOSTED_ZONE" ]]
  do
    read -p "Enter hosted zone ID: " HOSTED_ZONE
  done
  while [[ -z "$CERTIFICATE_ARN" ]]
  do
    read -p "Enter ACM certificate ARN: " CERTIFICATE_ARN
  done
fi

cd "$PROJECT_DIR"

if [ "$ACTION" == "create" ]
then
  log "Creating \e[1m${APPLICATION^}-WebStack\e[0m"
  aws cloudformation create-stack \
        --stack-name "${APPLICATION^}-WebStack" \
        --template-body file://cloudformation.yml \
        --capabilities CAPABILITY_NAMED_IAM \
        --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION \
                      ParameterKey=domainName,ParameterValue=$DOMAIN \
                      ParameterKey=certificateArn,ParameterValue=$CERTIFICATE_ARN \
                      ParameterKey=hostedZoneId,ParameterValue=$HOSTED_ZONE

elif [ "$ACTION" == "update" ]
then
  log "Updating \e[1m${APPLICATION^}-WebStack\e[0m"
  aws cloudformation update-stack \
          --stack-name "${APPLICATION^}-WebStack" \
          --template-body file://cloudformation.yml \
          --capabilities CAPABILITY_NAMED_IAM \
          --parameters ParameterKey=applicationName,ParameterValue=$APPLICATION \
                        ParameterKey=domainName,ParameterValue=$DOMAIN \
                        ParameterKey=certificateArn,ParameterValue=$CERTIFICATE_ARN \
                        ParameterKey=hostedZoneId,ParameterValue=$HOSTED_ZONE

elif [ "$ACTION" == "delete" ]
then 
  log "Deleting \e[1m${APPLICATION^}-WebStack\e[0m"
  aws cloudformation delete-stack \
          --stack-name "${APPLICATION^}-WebStack"
fi

exit 0
