<svg id="store" 
   class="screen-cursor"
   [attr.viewBox]="conf.mobileMode() ? '0 0 75.603735 134.40664' : '0 0 69.370247 42.747798'">
   <defs>
      <filter id="btn-drop-shadow-definition"
         style="color-interpolation-filters:sRGB;"
         x="-0.18036443"
         y="-0.13401417"
         width="1.3143786"
         height="1.3190908">
         <feFlood
            flood-opacity="0.670588"
            flood-color="rgb(0,0,0)"
            result="flood"
            id="feFlood32275" />
         <feComposite
            in="flood"
            in2="SourceGraphic"
            operator="in"
            result="composite1"
            id="feComposite32277" />
         <feGaussianBlur
            in="composite1"
            stdDeviation="14.7756"
            result="blur"
            id="feGaussianBlur32279" />
         <feOffset
            dx="-17.7985"
            dy="19.608"
            result="offset"
            id="feOffset32281" />
         <feComposite
            in="SourceGraphic"
            in2="offset"
            operator="over"
            result="composite2"
            id="feComposite32283" />
      </filter>
   </defs>
   <use id="margin-frames" 
      *ngIf="!conf.mobileMode()"
      class="med-stroke" 
      href="/assets/svgs/graphics/definitions_store.svg#margins-desktop"/>
   <use id="margin-frames"
      *ngIf="conf.mobileMode()"
      href="/assets/svgs/graphics/definitions_store.svg#margins-mobile"/>
   <rect id="background"
      width="100%"
      height="100%"
      x="0"
      y="0" />
   <g id="clothing-card"
      class="screen-clickable"
      [attr.transform]="
         conf.mobileMode() ? 
            'matrix(1.5,0,0,1.5,18.325622,-3.2573442)' : 
            'translate(1.3181207,0.65625083)'
      "
      (mouseenter)="hover('Clothing')"
      (mouseleave)="unhover()"
      (click)="select('Clothing')"
      >
      <circle id="clothing-badge"
         class="full-stroke"
         cx="12.922859"
         cy="11.436616"
         r="6.5882668" />
      <g id="clothing-star">
         <use id="clothing-outer-star"
            class="half-stroke"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.26458333,0,0,0.26458333,0.6005595,3.3777345)" />
         <use id="clothing-inner-star"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.22432801,0,0,0.2300492,2.4793943,4.4004627)" />
         <g id="clothing-selectors">
            <use id="clothing-selector-04"
               *ngIf="indicated(this.indicatorStates.one) && hovering('Clothing')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.17733482,0,0,0.18185752,4.6826808,5.9490392)" />
            <use id="clothing-selector-03"
               *ngIf="indicated(this.indicatorStates.two) && hovering('Clothing')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.1444958,0,0,0.14818098,6.2183362,6.9361119)" />
            <use id="clothing-selector-02"
               *ngIf="indicated(this.indicatorStates.three) && hovering('Clothing')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.11544666,0,0,0.11839097,7.6067708,7.7964373)" />
            <use id="clothing-selector-01"
               *ngIf="indicated(this.indicatorStates.four) && hovering('Clothing')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.08878791,0,0,0.09105232,8.8440884,8.6146099)" />
         </g>
      </g>
      <g id="clothing-text"
         role="heading"
         aria-level="2">
         <use id="clothing-text-shadow"
            transform="translate(-0.36125336,0.02068)"
            href="/assets/svgs/graphics/definitions_store.svg#clothing-word" 
            aria-hidden="true"/>
         <use id="clothing-text-foreground"
            href="/assets/svgs/graphics/definitions_store.svg#clothing-word" 
            aria-label="Clothing"/>
      </g>
   </g>
   <g id="accessory-card"
      class="screen-clickable"
      [attr.transform]="
         conf.mobileMode() ? 
            'matrix(1.5,0,0,1.5,17.708798,28.887649)' : 
            'translate(21.957123,0.43441763)'
      "
      (mouseenter)="hover('Accessories')"
      (mouseleave)="unhover()">
      <circle id="accessory-badge"
         class="full-stroke"
         cx="12.922859"
         cy="11.436616"
         r="6.5882668" />
      <g id="accessory-star">
         <use id="accessory-outer-star"
            class="half-stroke"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.26458333,0,0,0.26458333,0.6005595,3.3777345)"/>
         <use id="accessory-inner-star"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.22432801,0,0,0.2300492,2.4793943,4.4004627)"/>
         <g id="accessory-selectors">
            <use id="accessory-selector-04"
               *ngIf="indicated(this.indicatorStates.one) && hovering('Accessories')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.17733482,0,0,0.18185752,4.6826808,5.9490392)"/>
            <use id="accessory-selector-03"
               *ngIf="indicated(this.indicatorStates.two) && hovering('Accessories')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.1444958,0,0,0.14818098,6.2183362,6.9361119)" />
            <use id="accessory-selector-02"
               *ngIf="indicated(this.indicatorStates.three) && hovering('Accessories')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.11544666,0,0,0.11839097,7.6067708,7.7964373)" />
            <use id="accessory-selector-01"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               *ngIf="indicated(this.indicatorStates.four) && hovering('Accessories')"
               transform="matrix(0.08878791,0,0,0.09105232,8.8440884,8.6146099)"/>
         </g>
      </g>
      <g id="accessory-text"
         role="heading"
         aria-level="2">
         <use id="accessory-text-shadow"
            aria-hidden="true"
            href="/assets/svgs/graphics/definitions_store.svg#accessory-word"
            transform="translate(-0.11230122,0.22440903) rotate(11.352819,12.898688,11.95665)"/>
         <use id="accessory-text-foreground" 
            href="/assets/svgs/graphics/definitions_store.svg#accessory-word"
            aria-label="Accessories"
            transform="translate(0.24895214,0.20362903) rotate(10.787827,12.898689,11.956651)"/>
      </g>
   </g>
   <g id="esoterica-card"
      class="screen-clickable"
      [attr.transform]="
         conf.mobileMode() ? 
            'matrix(1.5,0,0,1.5,17.906569,61.31931)' :
            'translate(42.509091,0.59361954)'
      "    
      (mouseenter)="hover('Esoterica')"
      (mouseleave)="unhover()">
      <circle id="esoterica-badge"
         class="full-stroke"
         cx="12.922859"
         cy="11.436616"
         r="6.5882668"/>
      <g id="esoterica-star">
         <use id="esoterica-outer-star"
            class="half-stroke"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.26458333,0,0,0.26458333,0.6005595,3.3777345)"/>
         <use id="esoterica-inner-star"
            href="/assets/svgs/graphics/definitions_store.svg#star"
            transform="matrix(0.22432801,0,0,0.2300492,2.4793943,4.4004627)"/>
         <g id="esoterica-selectors">
            <use id="esoterica-selector-04"
               *ngIf="indicated(this.indicatorStates.one) && hovering('Esoterica')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.17733482,0,0,0.18185752,4.6826808,5.9490392)" />
            <use id="esoterica-selector-03"
               *ngIf="indicated(this.indicatorStates.two) && hovering('Esoterica')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.1444958,0,0,0.14818098,6.2183362,6.9361119)" />
            <use id="esoteria-selector-02"
               *ngIf="indicated(this.indicatorStates.three) && hovering('Esoterica')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.11544666,0,0,0.11839097,7.6067708,7.7964373)" />
            <use id="esoterica-selector-01"
               *ngIf="indicated(this.indicatorStates.four) && hovering('Esoterica')"
               href="/assets/svgs/graphics/definitions_store.svg#star"
               transform="matrix(0.08878791,0,0,0.09105232,8.8440884,8.6146099)"/>
         </g>
      </g>
      <g id="esoterica-text"
         role="heading"
         aria-level="2">
         <use id="esoterica-text-shadow"
            href="/assets/svgs/graphics/definitions_store.svg#esoterica-word"
            aria-hidden="true"
            transform="translate(-0.36125336,0.02068) rotate(2.1344983,12.898691,11.956654)"/>
         <use id="esoterica-text-foreground"
            href="/assets/svgs/graphics/definitions_store.svg#esoterica-word"
            aria-label="Esoterica"
            transform="rotate(1.7469799,12.898693,11.956652)"/>
      </g>
   </g>
   <g id="store-title"
      class="title-text"
      role="heading"
      aria-level="1"
      [attr.transform]="
         conf.mobileMode() ?
            'translate(4.7093898,79.396961)' :
            'translate(0.48792162,1.0136335)'">
      <g id="store-title-shadows"
         aria-hidden="true">
         <text id="store-title-shadow-04">
            <tspan id="store-title-shadow-container-04"
            x="13.902108"
            y="38.432938">
            STORE
            </tspan>
         </text>
         <text id="store-title-shadow-03">
            <tspan id="store-title-shadow-container-03"
            x="14.333445"
            y="38.497074">
            STORE
            </tspan></text>
         <text id="store-title-shadow-02">
            <tspan id="store-title-shadow-container-02"
            x="14.825211"
            y="38.448288">
            STORE
            </tspan>
         </text>
         <text id="store-title-shadow-01">
            <tspan id="store-title-shadow-container-01"
            x="15.459748"
            y="38.33498">
            STORE
            </tspan>
         </text>
      </g>
      <text id="store-title-foreground">
         <tspan id="store-title-foreground-container"
            x="15.884538"
            y="38.341587">
            STORE
         </tspan>
      </text>
   </g>
   <g id="back-button"
      *ngIf="!conf.viewport || conf.mobileMode()"
      class="screen-clickable"
      [attr.transform]="
         conf.mobileMode() ?
            'matrix(0.02761851,0,0,0.02761851,60.448808,119.15265)' :
            'matrix(0.01644165,0,0,0.01644165,59.871825,33.186145)'
      "
      style="filter:url(#btn-drop-shadow-definition)"
      role="button"
      (click)="nav.routeHome()"
      aria-label="Go Back"
      matTooltip="Go back to the homepage">
      <path id="arrow-container"
         d="m 64,256 c 0,106 86,192 192,192 106,0 192,-86 192,-192 C 448,150 362,64 256,64 150,64 64,150 64,256 Z" />
      <path id="back-arrow"
         d="m 266.91,327.74 v -37.32 c -57.07,0 -84.51,13.47 -108.58,38.68 -5.4,5.65 -15,1.32 -14.29,-6.43 5.45,-61.45 34.14,-117.09 122.87,-117.09 v -37.32 a 8.32,8.32 0 0 1 14,-6 L 365.42,242 a 8.2,8.2 0 0 1 0,11.94 L 281,333.71 a 8.32,8.32 0 0 1 -14.09,-5.97 z"
         role="img"
         aria-label="Back arrow" />
  </g>

   <foreignObject id="store-viewport"
      *ngIf="selecting || selected()"
      x="0"
      y="0"
      [attr.width]="
         conf.mobileMode() ? 
            75.603735 : 
            69.370247
      "
      [attr.height]="
         conf.mobileMode() ?
            134.40664 :
            42.747798
      ">
      <app-clothing 
         *ngIf="viewing && selected('Clothing')"
         (closed)="deselect()">
      </app-clothing>
      <div id="store-animation"
         [class.clothing-on-animation]="selecting && selected('Clothing')"
         [class.hidden]="viewing || !selected()"
      >
      </div>

   </foreignObject>
</svg>